{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'reactstrap';\nimport { Card } from 'reactstrap';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Curso = function (_Component) {\n  _inherits(Curso, _Component);\n\n  var _super = _createSuper(Curso);\n\n  function Curso() {\n    _classCallCheck(this, Curso);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Curso, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _useState = useState(false),\n          _useState2 = _slicedToArray(_useState, 2),\n          show = _useState2[0],\n          setShow = _useState2[1];\n\n      var handleClose = function handleClose() {\n        return setShow(false);\n      };\n\n      var handleShow = function handleShow() {\n        return setShow(true);\n      };\n\n      return _jsx(View, {\n        children: _jsxs(Card, {\n          className: \"text-center\",\n          breakpoints: ['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs', 'xxs'],\n          children: [_jsxs(Text, {\n            children: [\"ID Assistido:   \", this.props.data.id]\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return alert(_this.props.data.nome);\n            },\n            children: _jsxs(Text, {\n              children: [\"Nome Assistido: \", this.props.data.nome]\n            })\n          }), _jsxs(Text, {\n            children: [\"Email Assistido: \", this.props.data.email]\n          }), _jsxs(Text, {\n            children: [\"Email Naturalidade: \", this.props.data.naturalidade]\n          }), _jsxs(Text, {\n            children: [\"Email Naturalidade: \", this.props.data.enderecos[0].logradouro]\n          }), _jsx(Button, {\n            color: \"primary\",\n            children: \"Salvar\"\n          }), _jsx(Button, {\n            color: \"danger\",\n            children: \"Excluir\"\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Curso;\n}(Component);\n\nexport { Curso as default };\nvar styles = StyleSheet.create({\n  container: {},\n  nomeCurso: {}\n});","map":{"version":3,"sources":["/home/joao/APP-BARDOCK-CURSOS/src/Pages/Curso/index.js"],"names":["React","Component","Button","Card","Curso","useState","show","setShow","handleClose","handleShow","props","data","id","alert","nome","email","naturalidade","enderecos","logradouro","styles","StyleSheet","create","container","nomeCurso"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;AAEA,OAAO,sCAAP;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,YAArB;;;;IAEqBC,K;;;;;;;;;;;;;WACjB,kBAAQ;AAAA;;AACJ,sBAAwBC,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,UAAOC,IAAP;AAAA,UAAaC,OAAb;;AAEA,UAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,eAAMD,OAAO,CAAC,KAAD,CAAb;AAAA,OAApB;;AACA,UAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,eAAMF,OAAO,CAAC,IAAD,CAAb;AAAA,OAAnB;;AAGA,aAEI,KAAC,IAAD;AAAA,kBACI,MAAC,IAAD;AAAM,UAAA,SAAS,EAAC,aAAhB;AAA8B,UAAA,WAAW,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,KAA9C,CAA3C;AAAA,qBACI,MAAC,IAAD;AAAA,2CAAwB,KAAKG,KAAL,CAAWC,IAAX,CAAgBC,EAAxC;AAAA,YADJ,EAEI,KAAC,gBAAD;AAAkB,YAAA,OAAO,EAAE;AAAA,qBAAKC,KAAK,CAAC,KAAI,CAACH,KAAL,CAAWC,IAAX,CAAgBG,IAAjB,CAAV;AAAA,aAA3B;AAAA,sBACA,MAAC,IAAD;AAAA,6CAAwB,KAAKJ,KAAL,CAAWC,IAAX,CAAgBG,IAAxC;AAAA;AADA,YAFJ,EAKI,MAAC,IAAD;AAAA,4CAAyB,KAAKJ,KAAL,CAAWC,IAAX,CAAgBI,KAAzC;AAAA,YALJ,EAMI,MAAC,IAAD;AAAA,+CAA4B,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,YAA5C;AAAA,YANJ,EAOI,MAAC,IAAD;AAAA,+CAA4B,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,SAAhB,CAA0B,CAA1B,EAA6BC,UAAzD;AAAA,YAPJ,EAQI,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA,YARJ,EASI,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA,YATJ;AAAA;AADJ,QAFJ;AAwBH;;;;EAhC8BjB,S;;SAAdG,K;AAmCrB,IAAMe,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAC,EADmB;AAI7BC,EAAAA,SAAS,EAAC;AAJmB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { View ,Text,Image,StyleSheet ,TouchableOpacity} from 'react-native';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'reactstrap';\nimport { Card } from 'reactstrap';\n\nexport default class Curso extends Component{\n    render(){\n        const [show, setShow] = useState(false);\n\n        const handleClose = () => setShow(false);\n        const handleShow = () => setShow(true);\n\n        \n        return(\n          \n            <View>\n                <Card className=\"text-center\" breakpoints={['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs', 'xxs']}>\n                    <Text >ID Assistido:   {this.props.data.id}</Text>\n                    <TouchableOpacity onPress={()=> alert(this.props.data.nome)}>\n                    <Text >Nome Assistido: {this.props.data.nome}</Text>\n                    </TouchableOpacity>\n                    <Text >Email Assistido: {this.props.data.email}</Text>\n                    <Text >Email Naturalidade: {this.props.data.naturalidade}</Text>\n                    <Text >Email Naturalidade: {this.props.data.enderecos[0].logradouro}</Text>\n                    <Button color=\"primary\"  >Salvar</Button>\n                    <Button color=\"danger\">Excluir</Button>\n                </Card>\n\n\n\n\n\n            </View>\n            \n        )\n\n        \n    }\n}\n\nconst styles = StyleSheet.create({\n    container:{\n\n    },\n    nomeCurso:{\n   \n    },\n\n  })"]},"metadata":{},"sourceType":"module"}